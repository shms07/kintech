"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.inquireParams = void 0;
const inquirer = __importStar(require("inquirer"));
const messages_1 = require("../messages");
const inquireParams = ({ username, password, baseUrl, lang, oAuthToken, }) => {
    const m = (0, messages_1.getBoundMessage)(lang);
    const questions = [
        {
            type: "input",
            message: m("Q_BaseUrl"),
            name: "baseUrl",
            default: baseUrl,
            when: () => !baseUrl,
            validate: (v) => !!v,
        },
        {
            type: "input",
            name: "username",
            message: m("Q_UserName"),
            default: username,
            when: () => !oAuthToken && !username,
            validate: (v) => !!v,
        },
        {
            type: "password",
            name: "password",
            message: m("Q_Password"),
            default: password,
            when: () => !oAuthToken && !password,
            validate: (v) => !!v,
        },
    ];
    return inquirer
        .prompt(questions)
        .then((answers) => Object.assign({ username, password, baseUrl }, answers));
};
exports.inquireParams = inquireParams;
__exportStar(require("./init"), exports);
//# sourceMappingURL=index.js.map